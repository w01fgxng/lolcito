{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\X1\\\\Desktop\\\\lolcito\\\\frontend\\\\mainscreen\\\\components\\\\bodyContainer.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styles from '../styles/Body.scss';\nimport axios from 'axios';\nimport ChampsContainer from './champContainer';\n\nvar BodyContainer = function BodyContainer() {\n  _s();\n\n  var _useState = useState(''),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState([]),\n      champions = _useState2[0],\n      setChampions = _useState2[1];\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var response, array, eachone;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios({\n              method: 'get',\n              url: 'http://ddragon.leagueoflegends.com/cdn/10.21.1/data/es_MX/champion.json'\n            });\n\n          case 2:\n            response = _context.sent;\n            array = [];\n\n            for (eachone in response.data.data) {\n              array.push(response.data.data[eachone]);\n            }\n\n            setChampions(array);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n\n  var handleChange = function handleChange(e) {\n    setState(e.target.value);\n    var newChampList = champions.filter(function (item) {\n      console.log(item.id);\n\n      if (item.id.toLowerCase.includes(e.target.value.toLowerCase())) {\n        console.log(\"si contiene el texto\");\n      }\n\n      return item;\n    });\n    console.log(\"champ searched\".e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.Main,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.SearchContainer,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: state,\n        name: \"champion\",\n        onChange: handleChange,\n        type: \"text\",\n        placeholder: \"Campeon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.ChampsContainer,\n      children: newChampList.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(ChampsContainer, {\n          data: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 32\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(BodyContainer, \"4iVJMfFm1T2qrJu5ug0Fr9+IPjM=\");\n\n_c = BodyContainer;\nexport default BodyContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BodyContainer\");","map":{"version":3,"sources":["C:/Users/X1/Desktop/lolcito/frontend/mainscreen/components/bodyContainer.jsx"],"names":["React","useState","useEffect","styles","axios","ChampsContainer","BodyContainer","state","setState","champions","setChampions","method","url","response","array","eachone","data","push","handleChange","e","target","value","newChampList","filter","item","console","log","id","toLowerCase","includes","Main","SearchContainer","map"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,kBAA5B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAAA,kBAEEL,QAAQ,CAAC,EAAD,CAFV;AAAA,MAEjBM,KAFiB;AAAA,MAEVC,QAFU;;AAAA,mBAGSP,QAAQ,CAAC,EAAD,CAHjB;AAAA,MAGjBQ,SAHiB;AAAA,MAGNC,YAHM;;AAKxBR,EAAAA,SAAS,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACcE,KAAK,CAAC;AACtBO,cAAAA,MAAM,EAAE,KADc;AAEtBC,cAAAA,GAAG,EAAC;AAFkB,aAAD,CADnB;;AAAA;AACHC,YAAAA,QADG;AAMDC,YAAAA,KANC,GAMO,EANP;;AAOP,iBAAWC,OAAX,IAAsBF,QAAQ,CAACG,IAAT,CAAcA,IAApC,EAAyC;AACpCF,cAAAA,KAAK,CAACG,IAAN,CAAWJ,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBD,OAAnB,CAAX;AACJ;;AACDL,YAAAA,YAAY,CAACI,KAAD,CAAZ;;AAVO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAWN,EAXM,CAAT;;AAYA,MAAMI,YAAY,GAAE,SAAdA,YAAc,CAACC,CAAD,EAAO;AACtBX,IAAAA,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACA,QAAMC,YAAY,GAACb,SAAS,CAACc,MAAV,CAAiB,UAAAC,IAAI,EAAE;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,EAAjB;;AACA,UAAGH,IAAI,CAACG,EAAL,CAAQC,WAAR,CAAoBC,QAApB,CAA6BV,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeO,WAAf,EAA7B,CAAH,EAA8D;AAC1DH,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;;AACD,aAAOF,IAAP;AACH,KANkB,CAAnB;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBP,CAAjB,CAAmBC,MAAnB,CAA0BC,KAAtC;AACJ,GAVD;;AAcA,sBACI;AAAK,IAAA,SAAS,EAAElB,MAAM,CAAC2B,IAAvB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAE3B,MAAM,CAAC4B,eAAvB;AAAA,6BACA;AAAO,QAAA,KAAK,EAAExB,KAAd;AAAqB,QAAA,IAAI,EAAC,UAA1B;AAAqC,QAAA,QAAQ,EAAEW,YAA/C;AAA6D,QAAA,IAAI,EAAC,MAAlE;AAAyE,QAAA,WAAW,EAAC;AAArF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,aADJ,eAII;AAAK,MAAA,SAAS,EAAEf,MAAM,CAACE,eAAvB;AAAA,gBAEQiB,YAAY,CAACU,GAAb,CAAiB,UAACR,IAAD,EAAS;AACtB,4BAAO,QAAC,eAAD;AAAgC,UAAA,IAAI,EAAEA;AAAtC,WAAuBA,IAAI,CAACG,EAA5B;AAAA;AAAA;AAAA;AAAA,iBAAP;AACH,OAFD;AAFR;AAAA;AAAA;AAAA;AAAA,aAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAkBH,CAjDD;;GAAMrB,a;;KAAAA,a;AAmDN,eAAeA,aAAf","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport styles from '../styles/Body.scss'\r\nimport axios from 'axios'\r\nimport ChampsContainer from './champContainer'\r\n\r\nconst BodyContainer = () => {\r\n\r\n    const [state, setState] = useState('')\r\n    const [champions, setChampions]= useState([])\r\n\r\n    useEffect(async () => {\r\n     const response = await axios({\r\n            method: 'get',\r\n            url:'http://ddragon.leagueoflegends.com/cdn/10.21.1/data/es_MX/champion.json',\r\n\r\n       });\r\n       const array = []\r\n       for (const eachone in response.data.data){\r\n            array.push(response.data.data[eachone])\r\n       }\r\n       setChampions(array)\r\n    }, [])\r\n    const handleChange =(e) => {\r\n         setState(e.target.value);\r\n         const newChampList=champions.filter(item=>{\r\n             console.log(item.id);\r\n             if(item.id.toLowerCase.includes(e.target.value.toLowerCase())){\r\n                 console.log(\"si contiene el texto\")\r\n             }\r\n             return item\r\n         })\r\n         console.log(\"champ searched\".e.target.value);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.Main}>\r\n            <div className={styles.SearchContainer}>\r\n            <input value={state} name=\"champion\" onChange={handleChange} type=\"text\" placeholder=\"Campeon\"/>    \r\n            </div>\r\n            <div className={styles.ChampsContainer}>\r\n                {\r\n                    newChampList.map((item)=> {\r\n                        return <ChampsContainer key= {item.id} data={item} />\r\n                    })\r\n\r\n\r\n                }\r\n                \r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BodyContainer\r\n"]},"metadata":{},"sourceType":"module"}